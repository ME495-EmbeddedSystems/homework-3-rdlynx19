<robot name="buttercup" xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:property name="params_yaml" value="$(find diff_drive)/robot_params.yaml"/>
<xacro:property name="yaml_dict" value="${xacro.load_yaml(params_yaml)}"/>
<xacro:property name="chassis_core" value="${yaml_dict['robot_params']['chassis_core']}"/>
<xacro:property name="wheel_radius" value="${yaml_dict['robot_params']['wheel_radius']}"/>
<xacro:property name="caster_radius" value="${yaml_dict['robot_params']['caster_radius']}"/>


<link name="base_link">
    <visual>
        <geometry>
            <box size="${chassis_core*2} ${chassis_core} ${chassis_core*0.5}"/>   
        </geometry>
        <material name="red_mat">
            <color rgba="1.0 0.0 0.0 1.0"/>    
        </material>
    </visual>
    <collision>
       <geometry>
            <box size="${chassis_core*2} ${chassis_core} ${chassis_core*0.5}"/>   
        </geometry>
        <material name="red_mat">
            <color rgba="1.0 0.0 0.0 1.0"/>    
        </material> 
    </collision>
    <inertial>
        <mass value="2.0"/>
        <inertia ixx="1.0" iyy="1.0" ixy="0.0" ixz="0.0" iyz="0.0" izz="1.0"/>
    </inertial>
</link>   

<link name="bottom_caster">
    <visual>
        <geometry>
            <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="green_mat">
            <color rgba="0 0 1 1"/>
        </material>
    </visual>
    <collision>
        <geometry>
            <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="green_mat">
            <color rgba="0 0 1 1"/>
        </material>
    </collision>
    <inertial>
        <mass value="2.0"/>
        <inertia ixx="0.032" ixy="0.0" ixz="0.0" iyy="0.032" iyz="0.0" izz="0.032"/>
    </inertial>
</link>

<link name="top_caster">
    <visual>
        <geometry>
            <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="green_mat">
            <color rgba="0 0 1 1"/>
        </material>
    </visual>
    <collision>
        <geometry>
            <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="green_mat">
            <color rgba="0 0 1 1"/>
        </material>
    </collision>
    <inertial>
        <mass value="2.0"/>
        <inertia ixx="0.032" ixy="0.0" ixz="0.0" iyy="0.032" iyz="0.0" izz="0.032"/>
    </inertial>
</link>

<link name="left_wheel">
    <visual>
        <origin xyz="0 0 0" rpy="1.57 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="0.2"/>
        </geometry>
        <material name="blue_mat">
            <color rgba="0.0 1.0 0.0 1.0"/>
        </material>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="1.57 0 0"/>

        <geometry>
            <cylinder radius="${wheel_radius}" length="0.2"/>
        </geometry>
        <material name="blue_mat">
            <color rgba="0.0 1.0 0.0 1.0"/>
        </material>
    </collision>
    <inertial>
        <origin xyz="0 0 0" rpy="1.57 0 0"/>

        <mass value="20.0"/>
        <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
</link>

<link name="right_wheel">
    <visual>
        <origin xyz="0 0 0" rpy="1.57 0 0"/>

        <geometry>
            <cylinder radius="${wheel_radius}" length="0.2"/>
        </geometry>
        <material name="blue_mat">
            <color rgba="0.0 1.0 0.0 1.0"/>
        </material>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="1.57 0 0"/>
    
        <geometry>
            <cylinder radius="${wheel_radius}" length="0.2"/>
        </geometry>
        <material name="blue_mat">
            <color rgba="0.0 1.0 0.0 1.0"/>
        </material>
    </collision>
   <inertial>
        <origin xyz="0 0 0" rpy="1.57 0 0"/>

        <mass value="20.0"/>
        <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
</link>



<joint name="bottom_caster_wheel" type="fixed">
    <origin xyz="-${chassis_core*2*0.4} 0 -${chassis_core*0.5*0.5}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="bottom_caster"/>
    <!-- <axis xyz="1 1 1"/> -->
</joint>

<joint name="top_caster_wheel" type="fixed">
    <origin xyz="-${chassis_core*2*0.4} 0 ${chassis_core*0.5*0.5}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="top_caster"/>
    <!-- <axis xyz="1 1 1"/> -->
</joint>

<joint name="left_wheel_base" type="continuous">
    <origin xyz="${chassis_core*0.9} 0.6 0" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <axis xyz="0 1 0"/>
</joint>

<joint name="right_wheel_base" type="continuous">
    <origin xyz="${chassis_core*0.9} -0.6 0" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <axis xyz="0 1 0"/>
</joint>

<xacro:include filename="$(find diff_drive)/ddrive.gazebo.xacro"/>

</robot> 